/*
Kandji API

<html><head></head><body><h1 id=&quot;welcome-to-the-kandji-api-documentation&quot;>Welcome to the Kandji API Documentation</h1> <p>You can find your API URL in Settings &gt; Access. The API URL will follow the below formats.</p> <ul> <li><p>US - <code>https://SubDomain.api.kandji.io</code></p> </li> <li><p>EU - <code>https://SubDomain.api.eu.kandji.io</code></p> </li> </ul> <p>For information on how to obtain an API token, please refer to the following support article.</p> <p><a href=&quot;https://support.kandji.io/api&quot;>https://support.kandji.io/api</a></p> <h4 id=&quot;rate-limit&quot;>Rate Limit</h4> <p>The Kandji API currently has an API rate limit of 10,000 requests per hour per customer.</p> <h4 id=&quot;request-methods&quot;>Request Methods</h4> <p>HTTP request methods supported by the Kandji API.</p> <div class=&quot;click-to-expand-wrapper is-table-wrapper&quot;><table> <thead> <tr> <th>Method</th> <th>Definition</th> </tr> </thead> <tbody> <tr> <td>GET</td> <td>The <code>GET</code> method requests a representation of the specified resource.</td> </tr> <tr> <td>POST</td> <td>The <code>POST</code> method submits an entity to the specified resource.</td> </tr> <tr> <td>PATCH</td> <td>The <code>PATCH</code> method applies partial modifications to a resource.</td> </tr> <tr> <td>DELETE</td> <td>The <code>DELETE</code> method deletes the specified resource.</td> </tr> </tbody> </table> </div><h4 id=&quot;response-codes&quot;>Response codes</h4> <p>Not all response codes apply to every endpoint.</p> <div class=&quot;click-to-expand-wrapper is-table-wrapper&quot;><table> <thead> <tr> <th>Code</th> <th>Response</th> </tr> </thead> <tbody> <tr> <td>200</td> <td>OK</td> </tr> <tr> <td>201</td> <td>Created</td> </tr> <tr> <td>204</td> <td>No content</td> </tr> <tr> <td></td> <td>Typical response when sending the DELETE method.</td> </tr> <tr> <td>400</td> <td>Bad Request</td> </tr> <tr> <td></td> <td>&quot;Command already running&quot; - The command may already be running in a <em>Pending</em> state waiting on the device.</td> </tr> <tr> <td></td> <td>&quot;Command is not allowed for current device&quot; - The command may not be compatible with the target device.</td> </tr> <tr> <td></td> <td>&quot;JSON parse error - Expecting ',' delimiter: line 3 column 2 (char 65)&quot;</td> </tr> <tr> <td>401</td> <td>Unauthorized</td> </tr> <tr> <td></td> <td>This error can occur if the token is incorrect, was revoked, or the token has expired.</td> </tr> <tr> <td>403</td> <td>Forbidden</td> </tr> <tr> <td></td> <td>The request was understood but cannot be authorized.</td> </tr> <tr> <td>404</td> <td>Not found</td> </tr> <tr> <td></td> <td>Unable to locate the resource in the Kandji tenant.</td> </tr> <tr> <td>415</td> <td>Unsupported Media Type</td> </tr> <tr> <td></td> <td>The request contains a media type which the server or resource does not support.</td> </tr> <tr> <td>500</td> <td>Internal server error</td> </tr> <tr> <td>503</td> <td>Service unavailable</td> </tr> <tr> <td></td> <td>This error can occur if a file upload is still being processed via the custom apps API.</td> </tr> </tbody> </table> </div><h4 id=&quot;data-structure&quot;>Data structure</h4> <p>The API returns all structured responses in JSON schema format.</p> <h4 id=&quot;examples&quot;>Examples</h4> <p>Code examples using the API can be found in the Kandji support <a href=&quot;https://github.com/kandji-inc/support/tree/main/api-tools&quot;>GitHub</a>.</p> </body></html>

API version: 1.0.0
Contact: mitchelsblake@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kandji

import (
	"encoding/json"
)

// checks if the VulnerabilitiesGetVulnerabilityDescription200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VulnerabilitiesGetVulnerabilityDescription200Response{}

// VulnerabilitiesGetVulnerabilityDescription200Response struct for VulnerabilitiesGetVulnerabilityDescription200Response
type VulnerabilitiesGetVulnerabilityDescription200Response struct {
	CveId *string `json:"cve_id,omitempty"`
	CveLink *string `json:"cve_link,omitempty"`
	CveModifiedAt *string `json:"cve_modified_at,omitempty"`
	CvePublishedAt *string `json:"cve_published_at,omitempty"`
	CvssScore *float32 `json:"cvss_score,omitempty"`
	Description *string `json:"description,omitempty"`
	DeviceCount *int32 `json:"device_count,omitempty"`
	EpssScore *float32 `json:"epss_score,omitempty"`
	FirstDetectionDate *string `json:"first_detection_date,omitempty"`
	KevScore *int32 `json:"kev_score,omitempty"`
	LatestDetectionDate *string `json:"latest_detection_date,omitempty"`
	Severity *string `json:"severity,omitempty"`
	SoftwareCount *int32 `json:"software_count,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VulnerabilitiesGetVulnerabilityDescription200Response VulnerabilitiesGetVulnerabilityDescription200Response

// NewVulnerabilitiesGetVulnerabilityDescription200Response instantiates a new VulnerabilitiesGetVulnerabilityDescription200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilitiesGetVulnerabilityDescription200Response() *VulnerabilitiesGetVulnerabilityDescription200Response {
	this := VulnerabilitiesGetVulnerabilityDescription200Response{}
	return &this
}

// NewVulnerabilitiesGetVulnerabilityDescription200ResponseWithDefaults instantiates a new VulnerabilitiesGetVulnerabilityDescription200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilitiesGetVulnerabilityDescription200ResponseWithDefaults() *VulnerabilitiesGetVulnerabilityDescription200Response {
	this := VulnerabilitiesGetVulnerabilityDescription200Response{}
	return &this
}

// GetCveId returns the CveId field value if set, zero value otherwise.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetCveId() string {
	if o == nil || IsNil(o.CveId) {
		var ret string
		return ret
	}
	return *o.CveId
}

// GetCveIdOk returns a tuple with the CveId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetCveIdOk() (*string, bool) {
	if o == nil || IsNil(o.CveId) {
		return nil, false
	}
	return o.CveId, true
}

// HasCveId returns a boolean if a field has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) HasCveId() bool {
	if o != nil && !IsNil(o.CveId) {
		return true
	}

	return false
}

// SetCveId gets a reference to the given string and assigns it to the CveId field.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) SetCveId(v string) {
	o.CveId = &v
}

// GetCveLink returns the CveLink field value if set, zero value otherwise.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetCveLink() string {
	if o == nil || IsNil(o.CveLink) {
		var ret string
		return ret
	}
	return *o.CveLink
}

// GetCveLinkOk returns a tuple with the CveLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetCveLinkOk() (*string, bool) {
	if o == nil || IsNil(o.CveLink) {
		return nil, false
	}
	return o.CveLink, true
}

// HasCveLink returns a boolean if a field has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) HasCveLink() bool {
	if o != nil && !IsNil(o.CveLink) {
		return true
	}

	return false
}

// SetCveLink gets a reference to the given string and assigns it to the CveLink field.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) SetCveLink(v string) {
	o.CveLink = &v
}

// GetCveModifiedAt returns the CveModifiedAt field value if set, zero value otherwise.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetCveModifiedAt() string {
	if o == nil || IsNil(o.CveModifiedAt) {
		var ret string
		return ret
	}
	return *o.CveModifiedAt
}

// GetCveModifiedAtOk returns a tuple with the CveModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetCveModifiedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CveModifiedAt) {
		return nil, false
	}
	return o.CveModifiedAt, true
}

// HasCveModifiedAt returns a boolean if a field has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) HasCveModifiedAt() bool {
	if o != nil && !IsNil(o.CveModifiedAt) {
		return true
	}

	return false
}

// SetCveModifiedAt gets a reference to the given string and assigns it to the CveModifiedAt field.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) SetCveModifiedAt(v string) {
	o.CveModifiedAt = &v
}

// GetCvePublishedAt returns the CvePublishedAt field value if set, zero value otherwise.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetCvePublishedAt() string {
	if o == nil || IsNil(o.CvePublishedAt) {
		var ret string
		return ret
	}
	return *o.CvePublishedAt
}

// GetCvePublishedAtOk returns a tuple with the CvePublishedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetCvePublishedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CvePublishedAt) {
		return nil, false
	}
	return o.CvePublishedAt, true
}

// HasCvePublishedAt returns a boolean if a field has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) HasCvePublishedAt() bool {
	if o != nil && !IsNil(o.CvePublishedAt) {
		return true
	}

	return false
}

// SetCvePublishedAt gets a reference to the given string and assigns it to the CvePublishedAt field.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) SetCvePublishedAt(v string) {
	o.CvePublishedAt = &v
}

// GetCvssScore returns the CvssScore field value if set, zero value otherwise.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetCvssScore() float32 {
	if o == nil || IsNil(o.CvssScore) {
		var ret float32
		return ret
	}
	return *o.CvssScore
}

// GetCvssScoreOk returns a tuple with the CvssScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetCvssScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.CvssScore) {
		return nil, false
	}
	return o.CvssScore, true
}

// HasCvssScore returns a boolean if a field has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) HasCvssScore() bool {
	if o != nil && !IsNil(o.CvssScore) {
		return true
	}

	return false
}

// SetCvssScore gets a reference to the given float32 and assigns it to the CvssScore field.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) SetCvssScore(v float32) {
	o.CvssScore = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) SetDescription(v string) {
	o.Description = &v
}

// GetDeviceCount returns the DeviceCount field value if set, zero value otherwise.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetDeviceCount() int32 {
	if o == nil || IsNil(o.DeviceCount) {
		var ret int32
		return ret
	}
	return *o.DeviceCount
}

// GetDeviceCountOk returns a tuple with the DeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetDeviceCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DeviceCount) {
		return nil, false
	}
	return o.DeviceCount, true
}

// HasDeviceCount returns a boolean if a field has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) HasDeviceCount() bool {
	if o != nil && !IsNil(o.DeviceCount) {
		return true
	}

	return false
}

// SetDeviceCount gets a reference to the given int32 and assigns it to the DeviceCount field.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) SetDeviceCount(v int32) {
	o.DeviceCount = &v
}

// GetEpssScore returns the EpssScore field value if set, zero value otherwise.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetEpssScore() float32 {
	if o == nil || IsNil(o.EpssScore) {
		var ret float32
		return ret
	}
	return *o.EpssScore
}

// GetEpssScoreOk returns a tuple with the EpssScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetEpssScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.EpssScore) {
		return nil, false
	}
	return o.EpssScore, true
}

// HasEpssScore returns a boolean if a field has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) HasEpssScore() bool {
	if o != nil && !IsNil(o.EpssScore) {
		return true
	}

	return false
}

// SetEpssScore gets a reference to the given float32 and assigns it to the EpssScore field.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) SetEpssScore(v float32) {
	o.EpssScore = &v
}

// GetFirstDetectionDate returns the FirstDetectionDate field value if set, zero value otherwise.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetFirstDetectionDate() string {
	if o == nil || IsNil(o.FirstDetectionDate) {
		var ret string
		return ret
	}
	return *o.FirstDetectionDate
}

// GetFirstDetectionDateOk returns a tuple with the FirstDetectionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetFirstDetectionDateOk() (*string, bool) {
	if o == nil || IsNil(o.FirstDetectionDate) {
		return nil, false
	}
	return o.FirstDetectionDate, true
}

// HasFirstDetectionDate returns a boolean if a field has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) HasFirstDetectionDate() bool {
	if o != nil && !IsNil(o.FirstDetectionDate) {
		return true
	}

	return false
}

// SetFirstDetectionDate gets a reference to the given string and assigns it to the FirstDetectionDate field.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) SetFirstDetectionDate(v string) {
	o.FirstDetectionDate = &v
}

// GetKevScore returns the KevScore field value if set, zero value otherwise.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetKevScore() int32 {
	if o == nil || IsNil(o.KevScore) {
		var ret int32
		return ret
	}
	return *o.KevScore
}

// GetKevScoreOk returns a tuple with the KevScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetKevScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.KevScore) {
		return nil, false
	}
	return o.KevScore, true
}

// HasKevScore returns a boolean if a field has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) HasKevScore() bool {
	if o != nil && !IsNil(o.KevScore) {
		return true
	}

	return false
}

// SetKevScore gets a reference to the given int32 and assigns it to the KevScore field.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) SetKevScore(v int32) {
	o.KevScore = &v
}

// GetLatestDetectionDate returns the LatestDetectionDate field value if set, zero value otherwise.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetLatestDetectionDate() string {
	if o == nil || IsNil(o.LatestDetectionDate) {
		var ret string
		return ret
	}
	return *o.LatestDetectionDate
}

// GetLatestDetectionDateOk returns a tuple with the LatestDetectionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetLatestDetectionDateOk() (*string, bool) {
	if o == nil || IsNil(o.LatestDetectionDate) {
		return nil, false
	}
	return o.LatestDetectionDate, true
}

// HasLatestDetectionDate returns a boolean if a field has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) HasLatestDetectionDate() bool {
	if o != nil && !IsNil(o.LatestDetectionDate) {
		return true
	}

	return false
}

// SetLatestDetectionDate gets a reference to the given string and assigns it to the LatestDetectionDate field.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) SetLatestDetectionDate(v string) {
	o.LatestDetectionDate = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) SetSeverity(v string) {
	o.Severity = &v
}

// GetSoftwareCount returns the SoftwareCount field value if set, zero value otherwise.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetSoftwareCount() int32 {
	if o == nil || IsNil(o.SoftwareCount) {
		var ret int32
		return ret
	}
	return *o.SoftwareCount
}

// GetSoftwareCountOk returns a tuple with the SoftwareCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) GetSoftwareCountOk() (*int32, bool) {
	if o == nil || IsNil(o.SoftwareCount) {
		return nil, false
	}
	return o.SoftwareCount, true
}

// HasSoftwareCount returns a boolean if a field has been set.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) HasSoftwareCount() bool {
	if o != nil && !IsNil(o.SoftwareCount) {
		return true
	}

	return false
}

// SetSoftwareCount gets a reference to the given int32 and assigns it to the SoftwareCount field.
func (o *VulnerabilitiesGetVulnerabilityDescription200Response) SetSoftwareCount(v int32) {
	o.SoftwareCount = &v
}

func (o VulnerabilitiesGetVulnerabilityDescription200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VulnerabilitiesGetVulnerabilityDescription200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CveId) {
		toSerialize["cve_id"] = o.CveId
	}
	if !IsNil(o.CveLink) {
		toSerialize["cve_link"] = o.CveLink
	}
	if !IsNil(o.CveModifiedAt) {
		toSerialize["cve_modified_at"] = o.CveModifiedAt
	}
	if !IsNil(o.CvePublishedAt) {
		toSerialize["cve_published_at"] = o.CvePublishedAt
	}
	if !IsNil(o.CvssScore) {
		toSerialize["cvss_score"] = o.CvssScore
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DeviceCount) {
		toSerialize["device_count"] = o.DeviceCount
	}
	if !IsNil(o.EpssScore) {
		toSerialize["epss_score"] = o.EpssScore
	}
	if !IsNil(o.FirstDetectionDate) {
		toSerialize["first_detection_date"] = o.FirstDetectionDate
	}
	if !IsNil(o.KevScore) {
		toSerialize["kev_score"] = o.KevScore
	}
	if !IsNil(o.LatestDetectionDate) {
		toSerialize["latest_detection_date"] = o.LatestDetectionDate
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.SoftwareCount) {
		toSerialize["software_count"] = o.SoftwareCount
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VulnerabilitiesGetVulnerabilityDescription200Response) UnmarshalJSON(data []byte) (err error) {
	varVulnerabilitiesGetVulnerabilityDescription200Response := _VulnerabilitiesGetVulnerabilityDescription200Response{}

	err = json.Unmarshal(data, &varVulnerabilitiesGetVulnerabilityDescription200Response)

	if err != nil {
		return err
	}

	*o = VulnerabilitiesGetVulnerabilityDescription200Response(varVulnerabilitiesGetVulnerabilityDescription200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cve_id")
		delete(additionalProperties, "cve_link")
		delete(additionalProperties, "cve_modified_at")
		delete(additionalProperties, "cve_published_at")
		delete(additionalProperties, "cvss_score")
		delete(additionalProperties, "description")
		delete(additionalProperties, "device_count")
		delete(additionalProperties, "epss_score")
		delete(additionalProperties, "first_detection_date")
		delete(additionalProperties, "kev_score")
		delete(additionalProperties, "latest_detection_date")
		delete(additionalProperties, "severity")
		delete(additionalProperties, "software_count")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVulnerabilitiesGetVulnerabilityDescription200Response struct {
	value *VulnerabilitiesGetVulnerabilityDescription200Response
	isSet bool
}

func (v NullableVulnerabilitiesGetVulnerabilityDescription200Response) Get() *VulnerabilitiesGetVulnerabilityDescription200Response {
	return v.value
}

func (v *NullableVulnerabilitiesGetVulnerabilityDescription200Response) Set(val *VulnerabilitiesGetVulnerabilityDescription200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilitiesGetVulnerabilityDescription200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilitiesGetVulnerabilityDescription200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilitiesGetVulnerabilityDescription200Response(val *VulnerabilitiesGetVulnerabilityDescription200Response) *NullableVulnerabilitiesGetVulnerabilityDescription200Response {
	return &NullableVulnerabilitiesGetVulnerabilityDescription200Response{value: val, isSet: true}
}

func (v NullableVulnerabilitiesGetVulnerabilityDescription200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilitiesGetVulnerabilityDescription200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


