/*
Kandji API

<html><head></head><body><h1 id=&quot;welcome-to-the-kandji-api-documentation&quot;>Welcome to the Kandji API Documentation</h1> <p>You can find your API URL in Settings &gt; Access. The API URL will follow the below formats.</p> <ul> <li><p>US - <code>https://SubDomain.api.kandji.io</code></p> </li> <li><p>EU - <code>https://SubDomain.api.eu.kandji.io</code></p> </li> </ul> <p>For information on how to obtain an API token, please refer to the following support article.</p> <p><a href=&quot;https://support.kandji.io/api&quot;>https://support.kandji.io/api</a></p> <h4 id=&quot;rate-limit&quot;>Rate Limit</h4> <p>The Kandji API currently has an API rate limit of 10,000 requests per hour per customer.</p> <h4 id=&quot;request-methods&quot;>Request Methods</h4> <p>HTTP request methods supported by the Kandji API.</p> <div class=&quot;click-to-expand-wrapper is-table-wrapper&quot;><table> <thead> <tr> <th>Method</th> <th>Definition</th> </tr> </thead> <tbody> <tr> <td>GET</td> <td>The <code>GET</code> method requests a representation of the specified resource.</td> </tr> <tr> <td>POST</td> <td>The <code>POST</code> method submits an entity to the specified resource.</td> </tr> <tr> <td>PATCH</td> <td>The <code>PATCH</code> method applies partial modifications to a resource.</td> </tr> <tr> <td>DELETE</td> <td>The <code>DELETE</code> method deletes the specified resource.</td> </tr> </tbody> </table> </div><h4 id=&quot;response-codes&quot;>Response codes</h4> <p>Not all response codes apply to every endpoint.</p> <div class=&quot;click-to-expand-wrapper is-table-wrapper&quot;><table> <thead> <tr> <th>Code</th> <th>Response</th> </tr> </thead> <tbody> <tr> <td>200</td> <td>OK</td> </tr> <tr> <td>201</td> <td>Created</td> </tr> <tr> <td>204</td> <td>No content</td> </tr> <tr> <td></td> <td>Typical response when sending the DELETE method.</td> </tr> <tr> <td>400</td> <td>Bad Request</td> </tr> <tr> <td></td> <td>&quot;Command already running&quot; - The command may already be running in a <em>Pending</em> state waiting on the device.</td> </tr> <tr> <td></td> <td>&quot;Command is not allowed for current device&quot; - The command may not be compatible with the target device.</td> </tr> <tr> <td></td> <td>&quot;JSON parse error - Expecting ',' delimiter: line 3 column 2 (char 65)&quot;</td> </tr> <tr> <td>401</td> <td>Unauthorized</td> </tr> <tr> <td></td> <td>This error can occur if the token is incorrect, was revoked, or the token has expired.</td> </tr> <tr> <td>403</td> <td>Forbidden</td> </tr> <tr> <td></td> <td>The request was understood but cannot be authorized.</td> </tr> <tr> <td>404</td> <td>Not found</td> </tr> <tr> <td></td> <td>Unable to locate the resource in the Kandji tenant.</td> </tr> <tr> <td>415</td> <td>Unsupported Media Type</td> </tr> <tr> <td></td> <td>The request contains a media type which the server or resource does not support.</td> </tr> <tr> <td>500</td> <td>Internal server error</td> </tr> <tr> <td>503</td> <td>Service unavailable</td> </tr> <tr> <td></td> <td>This error can occur if a file upload is still being processed via the custom apps API.</td> </tr> </tbody> </table> </div><h4 id=&quot;data-structure&quot;>Data structure</h4> <p>The API returns all structured responses in JSON schema format.</p> <h4 id=&quot;examples&quot;>Examples</h4> <p>Code examples using the API can be found in the Kandji support <a href=&quot;https://github.com/kandji-inc/support/tree/main/api-tools&quot;>GitHub</a>.</p> </body></html>

API version: 1.0.0
Contact: mitchelsblake@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kandji

import (
	"encoding/json"
)

// checks if the IphoneOrIpadInLostMode200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IphoneOrIpadInLostMode200Response{}

// IphoneOrIpadInLostMode200Response struct for IphoneOrIpadInLostMode200Response
type IphoneOrIpadInLostMode200Response struct {
	General *IphoneOrIpadInLostMode200ResponseGeneral `json:"general,omitempty"`
	Mdm *IphoneOrIpadInLostMode200ResponseMdm `json:"mdm,omitempty"`
	ActivationLock *IphoneOrIpadInLostMode200ResponseActivationLock `json:"activation_lock,omitempty"`
	Filevault *IphoneOrIpadInLostMode200ResponseFilevault `json:"filevault,omitempty"`
	LostMode *IphoneOrIpadInLostMode200ResponseLostMode `json:"lost_mode,omitempty"`
	AutomatedDeviceEnrollment *IphoneOrIpadInLostMode200ResponseAutomatedDeviceEnrollment `json:"automated_device_enrollment,omitempty"`
	KandjiAgent *IphoneOrIpadInLostMode200ResponseKandjiAgent `json:"kandji_agent,omitempty"`
	HardwareOverview *IphoneOrIpadInLostMode200ResponseHardwareOverview `json:"hardware_overview,omitempty"`
	Volumes interface{} `json:"volumes,omitempty"`
	Network map[string]interface{} `json:"network,omitempty"`
	RecoveryInformation *IphoneOrIpadInLostMode200ResponseRecoveryInformation `json:"recovery_information,omitempty"`
	Users *IphoneOrIpadInLostMode200ResponseUsers `json:"users,omitempty"`
	InstalledProfiles interface{} `json:"installed_profiles,omitempty"`
	AppleBusinessManager *IphoneOrIpadInLostMode200ResponseAppleBusinessManager `json:"apple_business_manager,omitempty"`
	SecurityInformation *IphoneOrIpadInLostMode200ResponseSecurityInformation `json:"security_information,omitempty"`
	Cellular *IphoneOrIpadInLostMode200ResponseCellular `json:"cellular,omitempty"`
	Tags interface{} `json:"tags,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IphoneOrIpadInLostMode200Response IphoneOrIpadInLostMode200Response

// NewIphoneOrIpadInLostMode200Response instantiates a new IphoneOrIpadInLostMode200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIphoneOrIpadInLostMode200Response() *IphoneOrIpadInLostMode200Response {
	this := IphoneOrIpadInLostMode200Response{}
	return &this
}

// NewIphoneOrIpadInLostMode200ResponseWithDefaults instantiates a new IphoneOrIpadInLostMode200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIphoneOrIpadInLostMode200ResponseWithDefaults() *IphoneOrIpadInLostMode200Response {
	this := IphoneOrIpadInLostMode200Response{}
	return &this
}

// GetGeneral returns the General field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200Response) GetGeneral() IphoneOrIpadInLostMode200ResponseGeneral {
	if o == nil || IsNil(o.General) {
		var ret IphoneOrIpadInLostMode200ResponseGeneral
		return ret
	}
	return *o.General
}

// GetGeneralOk returns a tuple with the General field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200Response) GetGeneralOk() (*IphoneOrIpadInLostMode200ResponseGeneral, bool) {
	if o == nil || IsNil(o.General) {
		return nil, false
	}
	return o.General, true
}

// HasGeneral returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200Response) HasGeneral() bool {
	if o != nil && !IsNil(o.General) {
		return true
	}

	return false
}

// SetGeneral gets a reference to the given IphoneOrIpadInLostMode200ResponseGeneral and assigns it to the General field.
func (o *IphoneOrIpadInLostMode200Response) SetGeneral(v IphoneOrIpadInLostMode200ResponseGeneral) {
	o.General = &v
}

// GetMdm returns the Mdm field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200Response) GetMdm() IphoneOrIpadInLostMode200ResponseMdm {
	if o == nil || IsNil(o.Mdm) {
		var ret IphoneOrIpadInLostMode200ResponseMdm
		return ret
	}
	return *o.Mdm
}

// GetMdmOk returns a tuple with the Mdm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200Response) GetMdmOk() (*IphoneOrIpadInLostMode200ResponseMdm, bool) {
	if o == nil || IsNil(o.Mdm) {
		return nil, false
	}
	return o.Mdm, true
}

// HasMdm returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200Response) HasMdm() bool {
	if o != nil && !IsNil(o.Mdm) {
		return true
	}

	return false
}

// SetMdm gets a reference to the given IphoneOrIpadInLostMode200ResponseMdm and assigns it to the Mdm field.
func (o *IphoneOrIpadInLostMode200Response) SetMdm(v IphoneOrIpadInLostMode200ResponseMdm) {
	o.Mdm = &v
}

// GetActivationLock returns the ActivationLock field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200Response) GetActivationLock() IphoneOrIpadInLostMode200ResponseActivationLock {
	if o == nil || IsNil(o.ActivationLock) {
		var ret IphoneOrIpadInLostMode200ResponseActivationLock
		return ret
	}
	return *o.ActivationLock
}

// GetActivationLockOk returns a tuple with the ActivationLock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200Response) GetActivationLockOk() (*IphoneOrIpadInLostMode200ResponseActivationLock, bool) {
	if o == nil || IsNil(o.ActivationLock) {
		return nil, false
	}
	return o.ActivationLock, true
}

// HasActivationLock returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200Response) HasActivationLock() bool {
	if o != nil && !IsNil(o.ActivationLock) {
		return true
	}

	return false
}

// SetActivationLock gets a reference to the given IphoneOrIpadInLostMode200ResponseActivationLock and assigns it to the ActivationLock field.
func (o *IphoneOrIpadInLostMode200Response) SetActivationLock(v IphoneOrIpadInLostMode200ResponseActivationLock) {
	o.ActivationLock = &v
}

// GetFilevault returns the Filevault field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200Response) GetFilevault() IphoneOrIpadInLostMode200ResponseFilevault {
	if o == nil || IsNil(o.Filevault) {
		var ret IphoneOrIpadInLostMode200ResponseFilevault
		return ret
	}
	return *o.Filevault
}

// GetFilevaultOk returns a tuple with the Filevault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200Response) GetFilevaultOk() (*IphoneOrIpadInLostMode200ResponseFilevault, bool) {
	if o == nil || IsNil(o.Filevault) {
		return nil, false
	}
	return o.Filevault, true
}

// HasFilevault returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200Response) HasFilevault() bool {
	if o != nil && !IsNil(o.Filevault) {
		return true
	}

	return false
}

// SetFilevault gets a reference to the given IphoneOrIpadInLostMode200ResponseFilevault and assigns it to the Filevault field.
func (o *IphoneOrIpadInLostMode200Response) SetFilevault(v IphoneOrIpadInLostMode200ResponseFilevault) {
	o.Filevault = &v
}

// GetLostMode returns the LostMode field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200Response) GetLostMode() IphoneOrIpadInLostMode200ResponseLostMode {
	if o == nil || IsNil(o.LostMode) {
		var ret IphoneOrIpadInLostMode200ResponseLostMode
		return ret
	}
	return *o.LostMode
}

// GetLostModeOk returns a tuple with the LostMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200Response) GetLostModeOk() (*IphoneOrIpadInLostMode200ResponseLostMode, bool) {
	if o == nil || IsNil(o.LostMode) {
		return nil, false
	}
	return o.LostMode, true
}

// HasLostMode returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200Response) HasLostMode() bool {
	if o != nil && !IsNil(o.LostMode) {
		return true
	}

	return false
}

// SetLostMode gets a reference to the given IphoneOrIpadInLostMode200ResponseLostMode and assigns it to the LostMode field.
func (o *IphoneOrIpadInLostMode200Response) SetLostMode(v IphoneOrIpadInLostMode200ResponseLostMode) {
	o.LostMode = &v
}

// GetAutomatedDeviceEnrollment returns the AutomatedDeviceEnrollment field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200Response) GetAutomatedDeviceEnrollment() IphoneOrIpadInLostMode200ResponseAutomatedDeviceEnrollment {
	if o == nil || IsNil(o.AutomatedDeviceEnrollment) {
		var ret IphoneOrIpadInLostMode200ResponseAutomatedDeviceEnrollment
		return ret
	}
	return *o.AutomatedDeviceEnrollment
}

// GetAutomatedDeviceEnrollmentOk returns a tuple with the AutomatedDeviceEnrollment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200Response) GetAutomatedDeviceEnrollmentOk() (*IphoneOrIpadInLostMode200ResponseAutomatedDeviceEnrollment, bool) {
	if o == nil || IsNil(o.AutomatedDeviceEnrollment) {
		return nil, false
	}
	return o.AutomatedDeviceEnrollment, true
}

// HasAutomatedDeviceEnrollment returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200Response) HasAutomatedDeviceEnrollment() bool {
	if o != nil && !IsNil(o.AutomatedDeviceEnrollment) {
		return true
	}

	return false
}

// SetAutomatedDeviceEnrollment gets a reference to the given IphoneOrIpadInLostMode200ResponseAutomatedDeviceEnrollment and assigns it to the AutomatedDeviceEnrollment field.
func (o *IphoneOrIpadInLostMode200Response) SetAutomatedDeviceEnrollment(v IphoneOrIpadInLostMode200ResponseAutomatedDeviceEnrollment) {
	o.AutomatedDeviceEnrollment = &v
}

// GetKandjiAgent returns the KandjiAgent field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200Response) GetKandjiAgent() IphoneOrIpadInLostMode200ResponseKandjiAgent {
	if o == nil || IsNil(o.KandjiAgent) {
		var ret IphoneOrIpadInLostMode200ResponseKandjiAgent
		return ret
	}
	return *o.KandjiAgent
}

// GetKandjiAgentOk returns a tuple with the KandjiAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200Response) GetKandjiAgentOk() (*IphoneOrIpadInLostMode200ResponseKandjiAgent, bool) {
	if o == nil || IsNil(o.KandjiAgent) {
		return nil, false
	}
	return o.KandjiAgent, true
}

// HasKandjiAgent returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200Response) HasKandjiAgent() bool {
	if o != nil && !IsNil(o.KandjiAgent) {
		return true
	}

	return false
}

// SetKandjiAgent gets a reference to the given IphoneOrIpadInLostMode200ResponseKandjiAgent and assigns it to the KandjiAgent field.
func (o *IphoneOrIpadInLostMode200Response) SetKandjiAgent(v IphoneOrIpadInLostMode200ResponseKandjiAgent) {
	o.KandjiAgent = &v
}

// GetHardwareOverview returns the HardwareOverview field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200Response) GetHardwareOverview() IphoneOrIpadInLostMode200ResponseHardwareOverview {
	if o == nil || IsNil(o.HardwareOverview) {
		var ret IphoneOrIpadInLostMode200ResponseHardwareOverview
		return ret
	}
	return *o.HardwareOverview
}

// GetHardwareOverviewOk returns a tuple with the HardwareOverview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200Response) GetHardwareOverviewOk() (*IphoneOrIpadInLostMode200ResponseHardwareOverview, bool) {
	if o == nil || IsNil(o.HardwareOverview) {
		return nil, false
	}
	return o.HardwareOverview, true
}

// HasHardwareOverview returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200Response) HasHardwareOverview() bool {
	if o != nil && !IsNil(o.HardwareOverview) {
		return true
	}

	return false
}

// SetHardwareOverview gets a reference to the given IphoneOrIpadInLostMode200ResponseHardwareOverview and assigns it to the HardwareOverview field.
func (o *IphoneOrIpadInLostMode200Response) SetHardwareOverview(v IphoneOrIpadInLostMode200ResponseHardwareOverview) {
	o.HardwareOverview = &v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IphoneOrIpadInLostMode200Response) GetVolumes() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IphoneOrIpadInLostMode200Response) GetVolumesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Volumes) {
		return nil, false
	}
	return &o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200Response) HasVolumes() bool {
	if o != nil && !IsNil(o.Volumes) {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given interface{} and assigns it to the Volumes field.
func (o *IphoneOrIpadInLostMode200Response) SetVolumes(v interface{}) {
	o.Volumes = v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200Response) GetNetwork() map[string]interface{} {
	if o == nil || IsNil(o.Network) {
		var ret map[string]interface{}
		return ret
	}
	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200Response) GetNetworkOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Network) {
		return map[string]interface{}{}, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200Response) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given map[string]interface{} and assigns it to the Network field.
func (o *IphoneOrIpadInLostMode200Response) SetNetwork(v map[string]interface{}) {
	o.Network = v
}

// GetRecoveryInformation returns the RecoveryInformation field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200Response) GetRecoveryInformation() IphoneOrIpadInLostMode200ResponseRecoveryInformation {
	if o == nil || IsNil(o.RecoveryInformation) {
		var ret IphoneOrIpadInLostMode200ResponseRecoveryInformation
		return ret
	}
	return *o.RecoveryInformation
}

// GetRecoveryInformationOk returns a tuple with the RecoveryInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200Response) GetRecoveryInformationOk() (*IphoneOrIpadInLostMode200ResponseRecoveryInformation, bool) {
	if o == nil || IsNil(o.RecoveryInformation) {
		return nil, false
	}
	return o.RecoveryInformation, true
}

// HasRecoveryInformation returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200Response) HasRecoveryInformation() bool {
	if o != nil && !IsNil(o.RecoveryInformation) {
		return true
	}

	return false
}

// SetRecoveryInformation gets a reference to the given IphoneOrIpadInLostMode200ResponseRecoveryInformation and assigns it to the RecoveryInformation field.
func (o *IphoneOrIpadInLostMode200Response) SetRecoveryInformation(v IphoneOrIpadInLostMode200ResponseRecoveryInformation) {
	o.RecoveryInformation = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200Response) GetUsers() IphoneOrIpadInLostMode200ResponseUsers {
	if o == nil || IsNil(o.Users) {
		var ret IphoneOrIpadInLostMode200ResponseUsers
		return ret
	}
	return *o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200Response) GetUsersOk() (*IphoneOrIpadInLostMode200ResponseUsers, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200Response) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given IphoneOrIpadInLostMode200ResponseUsers and assigns it to the Users field.
func (o *IphoneOrIpadInLostMode200Response) SetUsers(v IphoneOrIpadInLostMode200ResponseUsers) {
	o.Users = &v
}

// GetInstalledProfiles returns the InstalledProfiles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IphoneOrIpadInLostMode200Response) GetInstalledProfiles() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.InstalledProfiles
}

// GetInstalledProfilesOk returns a tuple with the InstalledProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IphoneOrIpadInLostMode200Response) GetInstalledProfilesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.InstalledProfiles) {
		return nil, false
	}
	return &o.InstalledProfiles, true
}

// HasInstalledProfiles returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200Response) HasInstalledProfiles() bool {
	if o != nil && !IsNil(o.InstalledProfiles) {
		return true
	}

	return false
}

// SetInstalledProfiles gets a reference to the given interface{} and assigns it to the InstalledProfiles field.
func (o *IphoneOrIpadInLostMode200Response) SetInstalledProfiles(v interface{}) {
	o.InstalledProfiles = v
}

// GetAppleBusinessManager returns the AppleBusinessManager field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200Response) GetAppleBusinessManager() IphoneOrIpadInLostMode200ResponseAppleBusinessManager {
	if o == nil || IsNil(o.AppleBusinessManager) {
		var ret IphoneOrIpadInLostMode200ResponseAppleBusinessManager
		return ret
	}
	return *o.AppleBusinessManager
}

// GetAppleBusinessManagerOk returns a tuple with the AppleBusinessManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200Response) GetAppleBusinessManagerOk() (*IphoneOrIpadInLostMode200ResponseAppleBusinessManager, bool) {
	if o == nil || IsNil(o.AppleBusinessManager) {
		return nil, false
	}
	return o.AppleBusinessManager, true
}

// HasAppleBusinessManager returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200Response) HasAppleBusinessManager() bool {
	if o != nil && !IsNil(o.AppleBusinessManager) {
		return true
	}

	return false
}

// SetAppleBusinessManager gets a reference to the given IphoneOrIpadInLostMode200ResponseAppleBusinessManager and assigns it to the AppleBusinessManager field.
func (o *IphoneOrIpadInLostMode200Response) SetAppleBusinessManager(v IphoneOrIpadInLostMode200ResponseAppleBusinessManager) {
	o.AppleBusinessManager = &v
}

// GetSecurityInformation returns the SecurityInformation field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200Response) GetSecurityInformation() IphoneOrIpadInLostMode200ResponseSecurityInformation {
	if o == nil || IsNil(o.SecurityInformation) {
		var ret IphoneOrIpadInLostMode200ResponseSecurityInformation
		return ret
	}
	return *o.SecurityInformation
}

// GetSecurityInformationOk returns a tuple with the SecurityInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200Response) GetSecurityInformationOk() (*IphoneOrIpadInLostMode200ResponseSecurityInformation, bool) {
	if o == nil || IsNil(o.SecurityInformation) {
		return nil, false
	}
	return o.SecurityInformation, true
}

// HasSecurityInformation returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200Response) HasSecurityInformation() bool {
	if o != nil && !IsNil(o.SecurityInformation) {
		return true
	}

	return false
}

// SetSecurityInformation gets a reference to the given IphoneOrIpadInLostMode200ResponseSecurityInformation and assigns it to the SecurityInformation field.
func (o *IphoneOrIpadInLostMode200Response) SetSecurityInformation(v IphoneOrIpadInLostMode200ResponseSecurityInformation) {
	o.SecurityInformation = &v
}

// GetCellular returns the Cellular field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200Response) GetCellular() IphoneOrIpadInLostMode200ResponseCellular {
	if o == nil || IsNil(o.Cellular) {
		var ret IphoneOrIpadInLostMode200ResponseCellular
		return ret
	}
	return *o.Cellular
}

// GetCellularOk returns a tuple with the Cellular field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200Response) GetCellularOk() (*IphoneOrIpadInLostMode200ResponseCellular, bool) {
	if o == nil || IsNil(o.Cellular) {
		return nil, false
	}
	return o.Cellular, true
}

// HasCellular returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200Response) HasCellular() bool {
	if o != nil && !IsNil(o.Cellular) {
		return true
	}

	return false
}

// SetCellular gets a reference to the given IphoneOrIpadInLostMode200ResponseCellular and assigns it to the Cellular field.
func (o *IphoneOrIpadInLostMode200Response) SetCellular(v IphoneOrIpadInLostMode200ResponseCellular) {
	o.Cellular = &v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IphoneOrIpadInLostMode200Response) GetTags() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IphoneOrIpadInLostMode200Response) GetTagsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return &o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200Response) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given interface{} and assigns it to the Tags field.
func (o *IphoneOrIpadInLostMode200Response) SetTags(v interface{}) {
	o.Tags = v
}

func (o IphoneOrIpadInLostMode200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IphoneOrIpadInLostMode200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.General) {
		toSerialize["general"] = o.General
	}
	if !IsNil(o.Mdm) {
		toSerialize["mdm"] = o.Mdm
	}
	if !IsNil(o.ActivationLock) {
		toSerialize["activation_lock"] = o.ActivationLock
	}
	if !IsNil(o.Filevault) {
		toSerialize["filevault"] = o.Filevault
	}
	if !IsNil(o.LostMode) {
		toSerialize["lost_mode"] = o.LostMode
	}
	if !IsNil(o.AutomatedDeviceEnrollment) {
		toSerialize["automated_device_enrollment"] = o.AutomatedDeviceEnrollment
	}
	if !IsNil(o.KandjiAgent) {
		toSerialize["kandji_agent"] = o.KandjiAgent
	}
	if !IsNil(o.HardwareOverview) {
		toSerialize["hardware_overview"] = o.HardwareOverview
	}
	if o.Volumes != nil {
		toSerialize["volumes"] = o.Volumes
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.RecoveryInformation) {
		toSerialize["recovery_information"] = o.RecoveryInformation
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	if o.InstalledProfiles != nil {
		toSerialize["installed_profiles"] = o.InstalledProfiles
	}
	if !IsNil(o.AppleBusinessManager) {
		toSerialize["apple_business_manager"] = o.AppleBusinessManager
	}
	if !IsNil(o.SecurityInformation) {
		toSerialize["security_information"] = o.SecurityInformation
	}
	if !IsNil(o.Cellular) {
		toSerialize["cellular"] = o.Cellular
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IphoneOrIpadInLostMode200Response) UnmarshalJSON(data []byte) (err error) {
	varIphoneOrIpadInLostMode200Response := _IphoneOrIpadInLostMode200Response{}

	err = json.Unmarshal(data, &varIphoneOrIpadInLostMode200Response)

	if err != nil {
		return err
	}

	*o = IphoneOrIpadInLostMode200Response(varIphoneOrIpadInLostMode200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "general")
		delete(additionalProperties, "mdm")
		delete(additionalProperties, "activation_lock")
		delete(additionalProperties, "filevault")
		delete(additionalProperties, "lost_mode")
		delete(additionalProperties, "automated_device_enrollment")
		delete(additionalProperties, "kandji_agent")
		delete(additionalProperties, "hardware_overview")
		delete(additionalProperties, "volumes")
		delete(additionalProperties, "network")
		delete(additionalProperties, "recovery_information")
		delete(additionalProperties, "users")
		delete(additionalProperties, "installed_profiles")
		delete(additionalProperties, "apple_business_manager")
		delete(additionalProperties, "security_information")
		delete(additionalProperties, "cellular")
		delete(additionalProperties, "tags")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIphoneOrIpadInLostMode200Response struct {
	value *IphoneOrIpadInLostMode200Response
	isSet bool
}

func (v NullableIphoneOrIpadInLostMode200Response) Get() *IphoneOrIpadInLostMode200Response {
	return v.value
}

func (v *NullableIphoneOrIpadInLostMode200Response) Set(val *IphoneOrIpadInLostMode200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableIphoneOrIpadInLostMode200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableIphoneOrIpadInLostMode200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIphoneOrIpadInLostMode200Response(val *IphoneOrIpadInLostMode200Response) *NullableIphoneOrIpadInLostMode200Response {
	return &NullableIphoneOrIpadInLostMode200Response{value: val, isSet: true}
}

func (v NullableIphoneOrIpadInLostMode200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIphoneOrIpadInLostMode200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


