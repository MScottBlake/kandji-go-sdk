/*
Kandji API

Testing CustomAppsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package kandji_go_sdk

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/MScottBlake/kandji-go-sdk"
)

func Test_kandji_go_sdk_CustomAppsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CustomAppsAPIService CreateCustomApp", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CustomAppsAPI.CreateCustomApp(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomAppsAPIService DeleteCustomApp", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var libraryItemId string

		httpRes, err := apiClient.CustomAppsAPI.DeleteCustomApp(context.Background(), libraryItemId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomAppsAPIService GetCustomApp", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var libraryItemId string

		resp, httpRes, err := apiClient.CustomAppsAPI.GetCustomApp(context.Background(), libraryItemId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomAppsAPIService ListCustomApps", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CustomAppsAPI.ListCustomApps(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomAppsAPIService UpdateCustomApp", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var libraryItemId string

		resp, httpRes, err := apiClient.CustomAppsAPI.UpdateCustomApp(context.Background(), libraryItemId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomAppsAPIService UploadCustomApp", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		httpRes, err := apiClient.CustomAppsAPI.UploadCustomApp(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
