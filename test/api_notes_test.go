/*
Kandji API

Testing NotesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package kandji_go_sdk

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/MScottBlake/kandji-go-sdk"
)

func Test_kandji_go_sdk_NotesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test NotesAPIService CreateDeviceNote", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var deviceId string

		resp, httpRes, err := apiClient.NotesAPI.CreateDeviceNote(context.Background(), deviceId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NotesAPIService DeleteDeviceNote", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var deviceId string
		var noteId string

		resp, httpRes, err := apiClient.NotesAPI.DeleteDeviceNote(context.Background(), deviceId, noteId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NotesAPIService GetDeviceNotes", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var deviceId string

		resp, httpRes, err := apiClient.NotesAPI.GetDeviceNotes(context.Background(), deviceId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NotesAPIService RetrieveDeviceNote", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var deviceId string
		var noteId string

		resp, httpRes, err := apiClient.NotesAPI.RetrieveDeviceNote(context.Background(), deviceId, noteId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NotesAPIService UpdateDeviceNote", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var deviceId string
		var noteId string

		resp, httpRes, err := apiClient.NotesAPI.UpdateDeviceNote(context.Background(), deviceId, noteId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
