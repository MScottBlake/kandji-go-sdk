/*
Kandji API

<html><head></head><body><h1 id=&quot;welcome-to-the-kandji-api-documentation&quot;>Welcome to the Kandji API Documentation</h1> <p>You can find your API URL in Settings &gt; Access. The API URL will follow the below formats.</p> <ul> <li><p>US - <code>https://SubDomain.api.kandji.io</code></p> </li> <li><p>EU - <code>https://SubDomain.api.eu.kandji.io</code></p> </li> </ul> <p>For information on how to obtain an API token, please refer to the following support article.</p> <p><a href=&quot;https://support.kandji.io/api&quot;>https://support.kandji.io/api</a></p> <h4 id=&quot;rate-limit&quot;>Rate Limit</h4> <p>The Kandji API currently has an API rate limit of 10,000 requests per hour per customer.</p> <h4 id=&quot;request-methods&quot;>Request Methods</h4> <p>HTTP request methods supported by the Kandji API.</p> <div class=&quot;click-to-expand-wrapper is-table-wrapper&quot;><table> <thead> <tr> <th>Method</th> <th>Definition</th> </tr> </thead> <tbody> <tr> <td>GET</td> <td>The <code>GET</code> method requests a representation of the specified resource.</td> </tr> <tr> <td>POST</td> <td>The <code>POST</code> method submits an entity to the specified resource.</td> </tr> <tr> <td>PATCH</td> <td>The <code>PATCH</code> method applies partial modifications to a resource.</td> </tr> <tr> <td>DELETE</td> <td>The <code>DELETE</code> method deletes the specified resource.</td> </tr> </tbody> </table> </div><h4 id=&quot;response-codes&quot;>Response codes</h4> <p>Not all response codes apply to every endpoint.</p> <div class=&quot;click-to-expand-wrapper is-table-wrapper&quot;><table> <thead> <tr> <th>Code</th> <th>Response</th> </tr> </thead> <tbody> <tr> <td>200</td> <td>OK</td> </tr> <tr> <td>201</td> <td>Created</td> </tr> <tr> <td>204</td> <td>No content</td> </tr> <tr> <td></td> <td>Typical response when sending the DELETE method.</td> </tr> <tr> <td>400</td> <td>Bad Request</td> </tr> <tr> <td></td> <td>&quot;Command already running&quot; - The command may already be running in a <em>Pending</em> state waiting on the device.</td> </tr> <tr> <td></td> <td>&quot;Command is not allowed for current device&quot; - The command may not be compatible with the target device.</td> </tr> <tr> <td></td> <td>&quot;JSON parse error - Expecting ',' delimiter: line 3 column 2 (char 65)&quot;</td> </tr> <tr> <td>401</td> <td>Unauthorized</td> </tr> <tr> <td></td> <td>This error can occur if the token is incorrect, was revoked, or the token has expired.</td> </tr> <tr> <td>403</td> <td>Forbidden</td> </tr> <tr> <td></td> <td>The request was understood but cannot be authorized.</td> </tr> <tr> <td>404</td> <td>Not found</td> </tr> <tr> <td></td> <td>Unable to locate the resource in the Kandji tenant.</td> </tr> <tr> <td>415</td> <td>Unsupported Media Type</td> </tr> <tr> <td></td> <td>The request contains a media type which the server or resource does not support.</td> </tr> <tr> <td>500</td> <td>Internal server error</td> </tr> <tr> <td>503</td> <td>Service unavailable</td> </tr> <tr> <td></td> <td>This error can occur if a file upload is still being processed via the custom apps API.</td> </tr> </tbody> </table> </div><h4 id=&quot;data-structure&quot;>Data structure</h4> <p>The API returns all structured responses in JSON schema format.</p> <h4 id=&quot;examples&quot;>Examples</h4> <p>Code examples using the API can be found in the Kandji support <a href=&quot;https://github.com/kandji-inc/support/tree/main/api-tools&quot;>GitHub</a>.</p> </body></html>

API version: 1.0.0
Contact: mitchelsblake@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kandji

import (
	"encoding/json"
)

// checks if the CreateIntegration200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateIntegration200Response{}

// CreateIntegration200Response struct for CreateIntegration200Response
type CreateIntegration200Response struct {
	Id *string `json:"id,omitempty"`
	Blueprint *CreateIntegration200ResponseBlueprint `json:"blueprint,omitempty"`
	AccessTokenExpiry *string `json:"access_token_expiry,omitempty"`
	ServerName *string `json:"server_name,omitempty"`
	ServerUuid *string `json:"server_uuid,omitempty"`
	AdminId *string `json:"admin_id,omitempty"`
	OrgName *string `json:"org_name,omitempty"`
	OrgEmail *string `json:"org_email,omitempty"`
	OrgPhone *string `json:"org_phone,omitempty"`
	OrgAddress *string `json:"org_address,omitempty"`
	OrgType *string `json:"org_type,omitempty"`
	StokenFileName *string `json:"stoken_file_name,omitempty"`
	LastDeviceSync interface{} `json:"last_device_sync,omitempty"`
	Defaults *CreateIntegration200ResponseDefaults `json:"defaults,omitempty"`
	DaysLeft *int32 `json:"days_left,omitempty"`
	Status *string `json:"status,omitempty"`
	StatusReason interface{} `json:"status_reason,omitempty"`
	StatusReceivedAt interface{} `json:"status_received_at,omitempty"`
	DeviceCounts *CreateIntegration200ResponseDeviceCounts `json:"device_counts,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateIntegration200Response CreateIntegration200Response

// NewCreateIntegration200Response instantiates a new CreateIntegration200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIntegration200Response() *CreateIntegration200Response {
	this := CreateIntegration200Response{}
	return &this
}

// NewCreateIntegration200ResponseWithDefaults instantiates a new CreateIntegration200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIntegration200ResponseWithDefaults() *CreateIntegration200Response {
	this := CreateIntegration200Response{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateIntegration200Response) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateIntegration200Response) SetId(v string) {
	o.Id = &v
}

// GetBlueprint returns the Blueprint field value if set, zero value otherwise.
func (o *CreateIntegration200Response) GetBlueprint() CreateIntegration200ResponseBlueprint {
	if o == nil || IsNil(o.Blueprint) {
		var ret CreateIntegration200ResponseBlueprint
		return ret
	}
	return *o.Blueprint
}

// GetBlueprintOk returns a tuple with the Blueprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetBlueprintOk() (*CreateIntegration200ResponseBlueprint, bool) {
	if o == nil || IsNil(o.Blueprint) {
		return nil, false
	}
	return o.Blueprint, true
}

// HasBlueprint returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasBlueprint() bool {
	if o != nil && !IsNil(o.Blueprint) {
		return true
	}

	return false
}

// SetBlueprint gets a reference to the given CreateIntegration200ResponseBlueprint and assigns it to the Blueprint field.
func (o *CreateIntegration200Response) SetBlueprint(v CreateIntegration200ResponseBlueprint) {
	o.Blueprint = &v
}

// GetAccessTokenExpiry returns the AccessTokenExpiry field value if set, zero value otherwise.
func (o *CreateIntegration200Response) GetAccessTokenExpiry() string {
	if o == nil || IsNil(o.AccessTokenExpiry) {
		var ret string
		return ret
	}
	return *o.AccessTokenExpiry
}

// GetAccessTokenExpiryOk returns a tuple with the AccessTokenExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetAccessTokenExpiryOk() (*string, bool) {
	if o == nil || IsNil(o.AccessTokenExpiry) {
		return nil, false
	}
	return o.AccessTokenExpiry, true
}

// HasAccessTokenExpiry returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasAccessTokenExpiry() bool {
	if o != nil && !IsNil(o.AccessTokenExpiry) {
		return true
	}

	return false
}

// SetAccessTokenExpiry gets a reference to the given string and assigns it to the AccessTokenExpiry field.
func (o *CreateIntegration200Response) SetAccessTokenExpiry(v string) {
	o.AccessTokenExpiry = &v
}

// GetServerName returns the ServerName field value if set, zero value otherwise.
func (o *CreateIntegration200Response) GetServerName() string {
	if o == nil || IsNil(o.ServerName) {
		var ret string
		return ret
	}
	return *o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetServerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServerName) {
		return nil, false
	}
	return o.ServerName, true
}

// HasServerName returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasServerName() bool {
	if o != nil && !IsNil(o.ServerName) {
		return true
	}

	return false
}

// SetServerName gets a reference to the given string and assigns it to the ServerName field.
func (o *CreateIntegration200Response) SetServerName(v string) {
	o.ServerName = &v
}

// GetServerUuid returns the ServerUuid field value if set, zero value otherwise.
func (o *CreateIntegration200Response) GetServerUuid() string {
	if o == nil || IsNil(o.ServerUuid) {
		var ret string
		return ret
	}
	return *o.ServerUuid
}

// GetServerUuidOk returns a tuple with the ServerUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetServerUuidOk() (*string, bool) {
	if o == nil || IsNil(o.ServerUuid) {
		return nil, false
	}
	return o.ServerUuid, true
}

// HasServerUuid returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasServerUuid() bool {
	if o != nil && !IsNil(o.ServerUuid) {
		return true
	}

	return false
}

// SetServerUuid gets a reference to the given string and assigns it to the ServerUuid field.
func (o *CreateIntegration200Response) SetServerUuid(v string) {
	o.ServerUuid = &v
}

// GetAdminId returns the AdminId field value if set, zero value otherwise.
func (o *CreateIntegration200Response) GetAdminId() string {
	if o == nil || IsNil(o.AdminId) {
		var ret string
		return ret
	}
	return *o.AdminId
}

// GetAdminIdOk returns a tuple with the AdminId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetAdminIdOk() (*string, bool) {
	if o == nil || IsNil(o.AdminId) {
		return nil, false
	}
	return o.AdminId, true
}

// HasAdminId returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasAdminId() bool {
	if o != nil && !IsNil(o.AdminId) {
		return true
	}

	return false
}

// SetAdminId gets a reference to the given string and assigns it to the AdminId field.
func (o *CreateIntegration200Response) SetAdminId(v string) {
	o.AdminId = &v
}

// GetOrgName returns the OrgName field value if set, zero value otherwise.
func (o *CreateIntegration200Response) GetOrgName() string {
	if o == nil || IsNil(o.OrgName) {
		var ret string
		return ret
	}
	return *o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetOrgNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrgName) {
		return nil, false
	}
	return o.OrgName, true
}

// HasOrgName returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasOrgName() bool {
	if o != nil && !IsNil(o.OrgName) {
		return true
	}

	return false
}

// SetOrgName gets a reference to the given string and assigns it to the OrgName field.
func (o *CreateIntegration200Response) SetOrgName(v string) {
	o.OrgName = &v
}

// GetOrgEmail returns the OrgEmail field value if set, zero value otherwise.
func (o *CreateIntegration200Response) GetOrgEmail() string {
	if o == nil || IsNil(o.OrgEmail) {
		var ret string
		return ret
	}
	return *o.OrgEmail
}

// GetOrgEmailOk returns a tuple with the OrgEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetOrgEmailOk() (*string, bool) {
	if o == nil || IsNil(o.OrgEmail) {
		return nil, false
	}
	return o.OrgEmail, true
}

// HasOrgEmail returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasOrgEmail() bool {
	if o != nil && !IsNil(o.OrgEmail) {
		return true
	}

	return false
}

// SetOrgEmail gets a reference to the given string and assigns it to the OrgEmail field.
func (o *CreateIntegration200Response) SetOrgEmail(v string) {
	o.OrgEmail = &v
}

// GetOrgPhone returns the OrgPhone field value if set, zero value otherwise.
func (o *CreateIntegration200Response) GetOrgPhone() string {
	if o == nil || IsNil(o.OrgPhone) {
		var ret string
		return ret
	}
	return *o.OrgPhone
}

// GetOrgPhoneOk returns a tuple with the OrgPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetOrgPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.OrgPhone) {
		return nil, false
	}
	return o.OrgPhone, true
}

// HasOrgPhone returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasOrgPhone() bool {
	if o != nil && !IsNil(o.OrgPhone) {
		return true
	}

	return false
}

// SetOrgPhone gets a reference to the given string and assigns it to the OrgPhone field.
func (o *CreateIntegration200Response) SetOrgPhone(v string) {
	o.OrgPhone = &v
}

// GetOrgAddress returns the OrgAddress field value if set, zero value otherwise.
func (o *CreateIntegration200Response) GetOrgAddress() string {
	if o == nil || IsNil(o.OrgAddress) {
		var ret string
		return ret
	}
	return *o.OrgAddress
}

// GetOrgAddressOk returns a tuple with the OrgAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetOrgAddressOk() (*string, bool) {
	if o == nil || IsNil(o.OrgAddress) {
		return nil, false
	}
	return o.OrgAddress, true
}

// HasOrgAddress returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasOrgAddress() bool {
	if o != nil && !IsNil(o.OrgAddress) {
		return true
	}

	return false
}

// SetOrgAddress gets a reference to the given string and assigns it to the OrgAddress field.
func (o *CreateIntegration200Response) SetOrgAddress(v string) {
	o.OrgAddress = &v
}

// GetOrgType returns the OrgType field value if set, zero value otherwise.
func (o *CreateIntegration200Response) GetOrgType() string {
	if o == nil || IsNil(o.OrgType) {
		var ret string
		return ret
	}
	return *o.OrgType
}

// GetOrgTypeOk returns a tuple with the OrgType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetOrgTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OrgType) {
		return nil, false
	}
	return o.OrgType, true
}

// HasOrgType returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasOrgType() bool {
	if o != nil && !IsNil(o.OrgType) {
		return true
	}

	return false
}

// SetOrgType gets a reference to the given string and assigns it to the OrgType field.
func (o *CreateIntegration200Response) SetOrgType(v string) {
	o.OrgType = &v
}

// GetStokenFileName returns the StokenFileName field value if set, zero value otherwise.
func (o *CreateIntegration200Response) GetStokenFileName() string {
	if o == nil || IsNil(o.StokenFileName) {
		var ret string
		return ret
	}
	return *o.StokenFileName
}

// GetStokenFileNameOk returns a tuple with the StokenFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetStokenFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.StokenFileName) {
		return nil, false
	}
	return o.StokenFileName, true
}

// HasStokenFileName returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasStokenFileName() bool {
	if o != nil && !IsNil(o.StokenFileName) {
		return true
	}

	return false
}

// SetStokenFileName gets a reference to the given string and assigns it to the StokenFileName field.
func (o *CreateIntegration200Response) SetStokenFileName(v string) {
	o.StokenFileName = &v
}

// GetLastDeviceSync returns the LastDeviceSync field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateIntegration200Response) GetLastDeviceSync() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.LastDeviceSync
}

// GetLastDeviceSyncOk returns a tuple with the LastDeviceSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateIntegration200Response) GetLastDeviceSyncOk() (*interface{}, bool) {
	if o == nil || IsNil(o.LastDeviceSync) {
		return nil, false
	}
	return &o.LastDeviceSync, true
}

// HasLastDeviceSync returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasLastDeviceSync() bool {
	if o != nil && !IsNil(o.LastDeviceSync) {
		return true
	}

	return false
}

// SetLastDeviceSync gets a reference to the given interface{} and assigns it to the LastDeviceSync field.
func (o *CreateIntegration200Response) SetLastDeviceSync(v interface{}) {
	o.LastDeviceSync = v
}

// GetDefaults returns the Defaults field value if set, zero value otherwise.
func (o *CreateIntegration200Response) GetDefaults() CreateIntegration200ResponseDefaults {
	if o == nil || IsNil(o.Defaults) {
		var ret CreateIntegration200ResponseDefaults
		return ret
	}
	return *o.Defaults
}

// GetDefaultsOk returns a tuple with the Defaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetDefaultsOk() (*CreateIntegration200ResponseDefaults, bool) {
	if o == nil || IsNil(o.Defaults) {
		return nil, false
	}
	return o.Defaults, true
}

// HasDefaults returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasDefaults() bool {
	if o != nil && !IsNil(o.Defaults) {
		return true
	}

	return false
}

// SetDefaults gets a reference to the given CreateIntegration200ResponseDefaults and assigns it to the Defaults field.
func (o *CreateIntegration200Response) SetDefaults(v CreateIntegration200ResponseDefaults) {
	o.Defaults = &v
}

// GetDaysLeft returns the DaysLeft field value if set, zero value otherwise.
func (o *CreateIntegration200Response) GetDaysLeft() int32 {
	if o == nil || IsNil(o.DaysLeft) {
		var ret int32
		return ret
	}
	return *o.DaysLeft
}

// GetDaysLeftOk returns a tuple with the DaysLeft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetDaysLeftOk() (*int32, bool) {
	if o == nil || IsNil(o.DaysLeft) {
		return nil, false
	}
	return o.DaysLeft, true
}

// HasDaysLeft returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasDaysLeft() bool {
	if o != nil && !IsNil(o.DaysLeft) {
		return true
	}

	return false
}

// SetDaysLeft gets a reference to the given int32 and assigns it to the DaysLeft field.
func (o *CreateIntegration200Response) SetDaysLeft(v int32) {
	o.DaysLeft = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CreateIntegration200Response) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CreateIntegration200Response) SetStatus(v string) {
	o.Status = &v
}

// GetStatusReason returns the StatusReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateIntegration200Response) GetStatusReason() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.StatusReason
}

// GetStatusReasonOk returns a tuple with the StatusReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateIntegration200Response) GetStatusReasonOk() (*interface{}, bool) {
	if o == nil || IsNil(o.StatusReason) {
		return nil, false
	}
	return &o.StatusReason, true
}

// HasStatusReason returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasStatusReason() bool {
	if o != nil && !IsNil(o.StatusReason) {
		return true
	}

	return false
}

// SetStatusReason gets a reference to the given interface{} and assigns it to the StatusReason field.
func (o *CreateIntegration200Response) SetStatusReason(v interface{}) {
	o.StatusReason = v
}

// GetStatusReceivedAt returns the StatusReceivedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateIntegration200Response) GetStatusReceivedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.StatusReceivedAt
}

// GetStatusReceivedAtOk returns a tuple with the StatusReceivedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateIntegration200Response) GetStatusReceivedAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.StatusReceivedAt) {
		return nil, false
	}
	return &o.StatusReceivedAt, true
}

// HasStatusReceivedAt returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasStatusReceivedAt() bool {
	if o != nil && !IsNil(o.StatusReceivedAt) {
		return true
	}

	return false
}

// SetStatusReceivedAt gets a reference to the given interface{} and assigns it to the StatusReceivedAt field.
func (o *CreateIntegration200Response) SetStatusReceivedAt(v interface{}) {
	o.StatusReceivedAt = v
}

// GetDeviceCounts returns the DeviceCounts field value if set, zero value otherwise.
func (o *CreateIntegration200Response) GetDeviceCounts() CreateIntegration200ResponseDeviceCounts {
	if o == nil || IsNil(o.DeviceCounts) {
		var ret CreateIntegration200ResponseDeviceCounts
		return ret
	}
	return *o.DeviceCounts
}

// GetDeviceCountsOk returns a tuple with the DeviceCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIntegration200Response) GetDeviceCountsOk() (*CreateIntegration200ResponseDeviceCounts, bool) {
	if o == nil || IsNil(o.DeviceCounts) {
		return nil, false
	}
	return o.DeviceCounts, true
}

// HasDeviceCounts returns a boolean if a field has been set.
func (o *CreateIntegration200Response) HasDeviceCounts() bool {
	if o != nil && !IsNil(o.DeviceCounts) {
		return true
	}

	return false
}

// SetDeviceCounts gets a reference to the given CreateIntegration200ResponseDeviceCounts and assigns it to the DeviceCounts field.
func (o *CreateIntegration200Response) SetDeviceCounts(v CreateIntegration200ResponseDeviceCounts) {
	o.DeviceCounts = &v
}

func (o CreateIntegration200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateIntegration200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Blueprint) {
		toSerialize["blueprint"] = o.Blueprint
	}
	if !IsNil(o.AccessTokenExpiry) {
		toSerialize["access_token_expiry"] = o.AccessTokenExpiry
	}
	if !IsNil(o.ServerName) {
		toSerialize["server_name"] = o.ServerName
	}
	if !IsNil(o.ServerUuid) {
		toSerialize["server_uuid"] = o.ServerUuid
	}
	if !IsNil(o.AdminId) {
		toSerialize["admin_id"] = o.AdminId
	}
	if !IsNil(o.OrgName) {
		toSerialize["org_name"] = o.OrgName
	}
	if !IsNil(o.OrgEmail) {
		toSerialize["org_email"] = o.OrgEmail
	}
	if !IsNil(o.OrgPhone) {
		toSerialize["org_phone"] = o.OrgPhone
	}
	if !IsNil(o.OrgAddress) {
		toSerialize["org_address"] = o.OrgAddress
	}
	if !IsNil(o.OrgType) {
		toSerialize["org_type"] = o.OrgType
	}
	if !IsNil(o.StokenFileName) {
		toSerialize["stoken_file_name"] = o.StokenFileName
	}
	if o.LastDeviceSync != nil {
		toSerialize["last_device_sync"] = o.LastDeviceSync
	}
	if !IsNil(o.Defaults) {
		toSerialize["defaults"] = o.Defaults
	}
	if !IsNil(o.DaysLeft) {
		toSerialize["days_left"] = o.DaysLeft
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.StatusReason != nil {
		toSerialize["status_reason"] = o.StatusReason
	}
	if o.StatusReceivedAt != nil {
		toSerialize["status_received_at"] = o.StatusReceivedAt
	}
	if !IsNil(o.DeviceCounts) {
		toSerialize["device_counts"] = o.DeviceCounts
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateIntegration200Response) UnmarshalJSON(data []byte) (err error) {
	varCreateIntegration200Response := _CreateIntegration200Response{}

	err = json.Unmarshal(data, &varCreateIntegration200Response)

	if err != nil {
		return err
	}

	*o = CreateIntegration200Response(varCreateIntegration200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "blueprint")
		delete(additionalProperties, "access_token_expiry")
		delete(additionalProperties, "server_name")
		delete(additionalProperties, "server_uuid")
		delete(additionalProperties, "admin_id")
		delete(additionalProperties, "org_name")
		delete(additionalProperties, "org_email")
		delete(additionalProperties, "org_phone")
		delete(additionalProperties, "org_address")
		delete(additionalProperties, "org_type")
		delete(additionalProperties, "stoken_file_name")
		delete(additionalProperties, "last_device_sync")
		delete(additionalProperties, "defaults")
		delete(additionalProperties, "days_left")
		delete(additionalProperties, "status")
		delete(additionalProperties, "status_reason")
		delete(additionalProperties, "status_received_at")
		delete(additionalProperties, "device_counts")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateIntegration200Response struct {
	value *CreateIntegration200Response
	isSet bool
}

func (v NullableCreateIntegration200Response) Get() *CreateIntegration200Response {
	return v.value
}

func (v *NullableCreateIntegration200Response) Set(val *CreateIntegration200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIntegration200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIntegration200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIntegration200Response(val *CreateIntegration200Response) *NullableCreateIntegration200Response {
	return &NullableCreateIntegration200Response{value: val, isSet: true}
}

func (v NullableCreateIntegration200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIntegration200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


