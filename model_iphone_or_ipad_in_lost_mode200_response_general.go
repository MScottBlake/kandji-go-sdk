/*
Kandji API

<html><head></head><body><h1 id=&quot;welcome-to-the-kandji-api-documentation&quot;>Welcome to the Kandji API Documentation</h1> <p>You can find your API URL in Settings &gt; Access. The API URL will follow the below formats.</p> <ul> <li><p>US - <code>https://SubDomain.api.kandji.io</code></p> </li> <li><p>EU - <code>https://SubDomain.api.eu.kandji.io</code></p> </li> </ul> <p>For information on how to obtain an API token, please refer to the following support article.</p> <p><a href=&quot;https://support.kandji.io/api&quot;>https://support.kandji.io/api</a></p> <h4 id=&quot;rate-limit&quot;>Rate Limit</h4> <p>The Kandji API currently has an API rate limit of 10,000 requests per hour per customer.</p> <h4 id=&quot;request-methods&quot;>Request Methods</h4> <p>HTTP request methods supported by the Kandji API.</p> <div class=&quot;click-to-expand-wrapper is-table-wrapper&quot;><table> <thead> <tr> <th>Method</th> <th>Definition</th> </tr> </thead> <tbody> <tr> <td>GET</td> <td>The <code>GET</code> method requests a representation of the specified resource.</td> </tr> <tr> <td>POST</td> <td>The <code>POST</code> method submits an entity to the specified resource.</td> </tr> <tr> <td>PATCH</td> <td>The <code>PATCH</code> method applies partial modifications to a resource.</td> </tr> <tr> <td>DELETE</td> <td>The <code>DELETE</code> method deletes the specified resource.</td> </tr> </tbody> </table> </div><h4 id=&quot;response-codes&quot;>Response codes</h4> <p>Not all response codes apply to every endpoint.</p> <div class=&quot;click-to-expand-wrapper is-table-wrapper&quot;><table> <thead> <tr> <th>Code</th> <th>Response</th> </tr> </thead> <tbody> <tr> <td>200</td> <td>OK</td> </tr> <tr> <td>201</td> <td>Created</td> </tr> <tr> <td>204</td> <td>No content</td> </tr> <tr> <td></td> <td>Typical response when sending the DELETE method.</td> </tr> <tr> <td>400</td> <td>Bad Request</td> </tr> <tr> <td></td> <td>&quot;Command already running&quot; - The command may already be running in a <em>Pending</em> state waiting on the device.</td> </tr> <tr> <td></td> <td>&quot;Command is not allowed for current device&quot; - The command may not be compatible with the target device.</td> </tr> <tr> <td></td> <td>&quot;JSON parse error - Expecting ',' delimiter: line 3 column 2 (char 65)&quot;</td> </tr> <tr> <td>401</td> <td>Unauthorized</td> </tr> <tr> <td></td> <td>This error can occur if the token is incorrect, was revoked, or the token has expired.</td> </tr> <tr> <td>403</td> <td>Forbidden</td> </tr> <tr> <td></td> <td>The request was understood but cannot be authorized.</td> </tr> <tr> <td>404</td> <td>Not found</td> </tr> <tr> <td></td> <td>Unable to locate the resource in the Kandji tenant.</td> </tr> <tr> <td>415</td> <td>Unsupported Media Type</td> </tr> <tr> <td></td> <td>The request contains a media type which the server or resource does not support.</td> </tr> <tr> <td>500</td> <td>Internal server error</td> </tr> <tr> <td>503</td> <td>Service unavailable</td> </tr> <tr> <td></td> <td>This error can occur if a file upload is still being processed via the custom apps API.</td> </tr> </tbody> </table> </div><h4 id=&quot;data-structure&quot;>Data structure</h4> <p>The API returns all structured responses in JSON schema format.</p> <h4 id=&quot;examples&quot;>Examples</h4> <p>Code examples using the API can be found in the Kandji support <a href=&quot;https://github.com/kandji-inc/support/tree/main/api-tools&quot;>GitHub</a>.</p> </body></html>

API version: 1.0.0
Contact: mitchelsblake@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kandji

import (
	"encoding/json"
)

// checks if the IphoneOrIpadInLostMode200ResponseGeneral type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IphoneOrIpadInLostMode200ResponseGeneral{}

// IphoneOrIpadInLostMode200ResponseGeneral struct for IphoneOrIpadInLostMode200ResponseGeneral
type IphoneOrIpadInLostMode200ResponseGeneral struct {
	DeviceId *string `json:"device_id,omitempty"`
	DeviceName *string `json:"device_name,omitempty"`
	LastEnrollment *string `json:"last_enrollment,omitempty"`
	FirstEnrollment *string `json:"first_enrollment,omitempty"`
	Model *string `json:"model,omitempty"`
	Platform *string `json:"platform,omitempty"`
	OsVersion *string `json:"os_version,omitempty"`
	SupplementalBuildVersion *string `json:"supplemental_build_version,omitempty"`
	SupplementalOsVersionExtra *string `json:"supplemental_os_version_extra,omitempty"`
	SystemVersion *string `json:"system_version,omitempty"`
	BootVolume *string `json:"boot_volume,omitempty"`
	TimeSinceBoot *string `json:"time_since_boot,omitempty"`
	LastUser *string `json:"last_user,omitempty"`
	AssetTag *string `json:"asset_tag,omitempty"`
	AssignedUser *string `json:"assigned_user,omitempty"`
	BlueprintName *string `json:"blueprint_name,omitempty"`
	BlueprintUuid *string `json:"blueprint_uuid,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IphoneOrIpadInLostMode200ResponseGeneral IphoneOrIpadInLostMode200ResponseGeneral

// NewIphoneOrIpadInLostMode200ResponseGeneral instantiates a new IphoneOrIpadInLostMode200ResponseGeneral object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIphoneOrIpadInLostMode200ResponseGeneral() *IphoneOrIpadInLostMode200ResponseGeneral {
	this := IphoneOrIpadInLostMode200ResponseGeneral{}
	return &this
}

// NewIphoneOrIpadInLostMode200ResponseGeneralWithDefaults instantiates a new IphoneOrIpadInLostMode200ResponseGeneral object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIphoneOrIpadInLostMode200ResponseGeneralWithDefaults() *IphoneOrIpadInLostMode200ResponseGeneral {
	this := IphoneOrIpadInLostMode200ResponseGeneral{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetDeviceId() string {
	if o == nil || IsNil(o.DeviceId) {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetDeviceName() string {
	if o == nil || IsNil(o.DeviceName) {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetDeviceNameOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceName) {
		return nil, false
	}
	return o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) HasDeviceName() bool {
	if o != nil && !IsNil(o.DeviceName) {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) SetDeviceName(v string) {
	o.DeviceName = &v
}

// GetLastEnrollment returns the LastEnrollment field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetLastEnrollment() string {
	if o == nil || IsNil(o.LastEnrollment) {
		var ret string
		return ret
	}
	return *o.LastEnrollment
}

// GetLastEnrollmentOk returns a tuple with the LastEnrollment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetLastEnrollmentOk() (*string, bool) {
	if o == nil || IsNil(o.LastEnrollment) {
		return nil, false
	}
	return o.LastEnrollment, true
}

// HasLastEnrollment returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) HasLastEnrollment() bool {
	if o != nil && !IsNil(o.LastEnrollment) {
		return true
	}

	return false
}

// SetLastEnrollment gets a reference to the given string and assigns it to the LastEnrollment field.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) SetLastEnrollment(v string) {
	o.LastEnrollment = &v
}

// GetFirstEnrollment returns the FirstEnrollment field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetFirstEnrollment() string {
	if o == nil || IsNil(o.FirstEnrollment) {
		var ret string
		return ret
	}
	return *o.FirstEnrollment
}

// GetFirstEnrollmentOk returns a tuple with the FirstEnrollment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetFirstEnrollmentOk() (*string, bool) {
	if o == nil || IsNil(o.FirstEnrollment) {
		return nil, false
	}
	return o.FirstEnrollment, true
}

// HasFirstEnrollment returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) HasFirstEnrollment() bool {
	if o != nil && !IsNil(o.FirstEnrollment) {
		return true
	}

	return false
}

// SetFirstEnrollment gets a reference to the given string and assigns it to the FirstEnrollment field.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) SetFirstEnrollment(v string) {
	o.FirstEnrollment = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) SetModel(v string) {
	o.Model = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetPlatform() string {
	if o == nil || IsNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) SetPlatform(v string) {
	o.Platform = &v
}

// GetOsVersion returns the OsVersion field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetOsVersion() string {
	if o == nil || IsNil(o.OsVersion) {
		var ret string
		return ret
	}
	return *o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetOsVersionOk() (*string, bool) {
	if o == nil || IsNil(o.OsVersion) {
		return nil, false
	}
	return o.OsVersion, true
}

// HasOsVersion returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) HasOsVersion() bool {
	if o != nil && !IsNil(o.OsVersion) {
		return true
	}

	return false
}

// SetOsVersion gets a reference to the given string and assigns it to the OsVersion field.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) SetOsVersion(v string) {
	o.OsVersion = &v
}

// GetSupplementalBuildVersion returns the SupplementalBuildVersion field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetSupplementalBuildVersion() string {
	if o == nil || IsNil(o.SupplementalBuildVersion) {
		var ret string
		return ret
	}
	return *o.SupplementalBuildVersion
}

// GetSupplementalBuildVersionOk returns a tuple with the SupplementalBuildVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetSupplementalBuildVersionOk() (*string, bool) {
	if o == nil || IsNil(o.SupplementalBuildVersion) {
		return nil, false
	}
	return o.SupplementalBuildVersion, true
}

// HasSupplementalBuildVersion returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) HasSupplementalBuildVersion() bool {
	if o != nil && !IsNil(o.SupplementalBuildVersion) {
		return true
	}

	return false
}

// SetSupplementalBuildVersion gets a reference to the given string and assigns it to the SupplementalBuildVersion field.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) SetSupplementalBuildVersion(v string) {
	o.SupplementalBuildVersion = &v
}

// GetSupplementalOsVersionExtra returns the SupplementalOsVersionExtra field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetSupplementalOsVersionExtra() string {
	if o == nil || IsNil(o.SupplementalOsVersionExtra) {
		var ret string
		return ret
	}
	return *o.SupplementalOsVersionExtra
}

// GetSupplementalOsVersionExtraOk returns a tuple with the SupplementalOsVersionExtra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetSupplementalOsVersionExtraOk() (*string, bool) {
	if o == nil || IsNil(o.SupplementalOsVersionExtra) {
		return nil, false
	}
	return o.SupplementalOsVersionExtra, true
}

// HasSupplementalOsVersionExtra returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) HasSupplementalOsVersionExtra() bool {
	if o != nil && !IsNil(o.SupplementalOsVersionExtra) {
		return true
	}

	return false
}

// SetSupplementalOsVersionExtra gets a reference to the given string and assigns it to the SupplementalOsVersionExtra field.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) SetSupplementalOsVersionExtra(v string) {
	o.SupplementalOsVersionExtra = &v
}

// GetSystemVersion returns the SystemVersion field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetSystemVersion() string {
	if o == nil || IsNil(o.SystemVersion) {
		var ret string
		return ret
	}
	return *o.SystemVersion
}

// GetSystemVersionOk returns a tuple with the SystemVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetSystemVersionOk() (*string, bool) {
	if o == nil || IsNil(o.SystemVersion) {
		return nil, false
	}
	return o.SystemVersion, true
}

// HasSystemVersion returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) HasSystemVersion() bool {
	if o != nil && !IsNil(o.SystemVersion) {
		return true
	}

	return false
}

// SetSystemVersion gets a reference to the given string and assigns it to the SystemVersion field.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) SetSystemVersion(v string) {
	o.SystemVersion = &v
}

// GetBootVolume returns the BootVolume field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetBootVolume() string {
	if o == nil || IsNil(o.BootVolume) {
		var ret string
		return ret
	}
	return *o.BootVolume
}

// GetBootVolumeOk returns a tuple with the BootVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetBootVolumeOk() (*string, bool) {
	if o == nil || IsNil(o.BootVolume) {
		return nil, false
	}
	return o.BootVolume, true
}

// HasBootVolume returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) HasBootVolume() bool {
	if o != nil && !IsNil(o.BootVolume) {
		return true
	}

	return false
}

// SetBootVolume gets a reference to the given string and assigns it to the BootVolume field.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) SetBootVolume(v string) {
	o.BootVolume = &v
}

// GetTimeSinceBoot returns the TimeSinceBoot field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetTimeSinceBoot() string {
	if o == nil || IsNil(o.TimeSinceBoot) {
		var ret string
		return ret
	}
	return *o.TimeSinceBoot
}

// GetTimeSinceBootOk returns a tuple with the TimeSinceBoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetTimeSinceBootOk() (*string, bool) {
	if o == nil || IsNil(o.TimeSinceBoot) {
		return nil, false
	}
	return o.TimeSinceBoot, true
}

// HasTimeSinceBoot returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) HasTimeSinceBoot() bool {
	if o != nil && !IsNil(o.TimeSinceBoot) {
		return true
	}

	return false
}

// SetTimeSinceBoot gets a reference to the given string and assigns it to the TimeSinceBoot field.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) SetTimeSinceBoot(v string) {
	o.TimeSinceBoot = &v
}

// GetLastUser returns the LastUser field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetLastUser() string {
	if o == nil || IsNil(o.LastUser) {
		var ret string
		return ret
	}
	return *o.LastUser
}

// GetLastUserOk returns a tuple with the LastUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetLastUserOk() (*string, bool) {
	if o == nil || IsNil(o.LastUser) {
		return nil, false
	}
	return o.LastUser, true
}

// HasLastUser returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) HasLastUser() bool {
	if o != nil && !IsNil(o.LastUser) {
		return true
	}

	return false
}

// SetLastUser gets a reference to the given string and assigns it to the LastUser field.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) SetLastUser(v string) {
	o.LastUser = &v
}

// GetAssetTag returns the AssetTag field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetAssetTag() string {
	if o == nil || IsNil(o.AssetTag) {
		var ret string
		return ret
	}
	return *o.AssetTag
}

// GetAssetTagOk returns a tuple with the AssetTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetAssetTagOk() (*string, bool) {
	if o == nil || IsNil(o.AssetTag) {
		return nil, false
	}
	return o.AssetTag, true
}

// HasAssetTag returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) HasAssetTag() bool {
	if o != nil && !IsNil(o.AssetTag) {
		return true
	}

	return false
}

// SetAssetTag gets a reference to the given string and assigns it to the AssetTag field.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) SetAssetTag(v string) {
	o.AssetTag = &v
}

// GetAssignedUser returns the AssignedUser field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetAssignedUser() string {
	if o == nil || IsNil(o.AssignedUser) {
		var ret string
		return ret
	}
	return *o.AssignedUser
}

// GetAssignedUserOk returns a tuple with the AssignedUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetAssignedUserOk() (*string, bool) {
	if o == nil || IsNil(o.AssignedUser) {
		return nil, false
	}
	return o.AssignedUser, true
}

// HasAssignedUser returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) HasAssignedUser() bool {
	if o != nil && !IsNil(o.AssignedUser) {
		return true
	}

	return false
}

// SetAssignedUser gets a reference to the given string and assigns it to the AssignedUser field.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) SetAssignedUser(v string) {
	o.AssignedUser = &v
}

// GetBlueprintName returns the BlueprintName field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetBlueprintName() string {
	if o == nil || IsNil(o.BlueprintName) {
		var ret string
		return ret
	}
	return *o.BlueprintName
}

// GetBlueprintNameOk returns a tuple with the BlueprintName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetBlueprintNameOk() (*string, bool) {
	if o == nil || IsNil(o.BlueprintName) {
		return nil, false
	}
	return o.BlueprintName, true
}

// HasBlueprintName returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) HasBlueprintName() bool {
	if o != nil && !IsNil(o.BlueprintName) {
		return true
	}

	return false
}

// SetBlueprintName gets a reference to the given string and assigns it to the BlueprintName field.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) SetBlueprintName(v string) {
	o.BlueprintName = &v
}

// GetBlueprintUuid returns the BlueprintUuid field value if set, zero value otherwise.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetBlueprintUuid() string {
	if o == nil || IsNil(o.BlueprintUuid) {
		var ret string
		return ret
	}
	return *o.BlueprintUuid
}

// GetBlueprintUuidOk returns a tuple with the BlueprintUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) GetBlueprintUuidOk() (*string, bool) {
	if o == nil || IsNil(o.BlueprintUuid) {
		return nil, false
	}
	return o.BlueprintUuid, true
}

// HasBlueprintUuid returns a boolean if a field has been set.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) HasBlueprintUuid() bool {
	if o != nil && !IsNil(o.BlueprintUuid) {
		return true
	}

	return false
}

// SetBlueprintUuid gets a reference to the given string and assigns it to the BlueprintUuid field.
func (o *IphoneOrIpadInLostMode200ResponseGeneral) SetBlueprintUuid(v string) {
	o.BlueprintUuid = &v
}

func (o IphoneOrIpadInLostMode200ResponseGeneral) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IphoneOrIpadInLostMode200ResponseGeneral) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceId) {
		toSerialize["device_id"] = o.DeviceId
	}
	if !IsNil(o.DeviceName) {
		toSerialize["device_name"] = o.DeviceName
	}
	if !IsNil(o.LastEnrollment) {
		toSerialize["last_enrollment"] = o.LastEnrollment
	}
	if !IsNil(o.FirstEnrollment) {
		toSerialize["first_enrollment"] = o.FirstEnrollment
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.OsVersion) {
		toSerialize["os_version"] = o.OsVersion
	}
	if !IsNil(o.SupplementalBuildVersion) {
		toSerialize["supplemental_build_version"] = o.SupplementalBuildVersion
	}
	if !IsNil(o.SupplementalOsVersionExtra) {
		toSerialize["supplemental_os_version_extra"] = o.SupplementalOsVersionExtra
	}
	if !IsNil(o.SystemVersion) {
		toSerialize["system_version"] = o.SystemVersion
	}
	if !IsNil(o.BootVolume) {
		toSerialize["boot_volume"] = o.BootVolume
	}
	if !IsNil(o.TimeSinceBoot) {
		toSerialize["time_since_boot"] = o.TimeSinceBoot
	}
	if !IsNil(o.LastUser) {
		toSerialize["last_user"] = o.LastUser
	}
	if !IsNil(o.AssetTag) {
		toSerialize["asset_tag"] = o.AssetTag
	}
	if !IsNil(o.AssignedUser) {
		toSerialize["assigned_user"] = o.AssignedUser
	}
	if !IsNil(o.BlueprintName) {
		toSerialize["blueprint_name"] = o.BlueprintName
	}
	if !IsNil(o.BlueprintUuid) {
		toSerialize["blueprint_uuid"] = o.BlueprintUuid
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IphoneOrIpadInLostMode200ResponseGeneral) UnmarshalJSON(data []byte) (err error) {
	varIphoneOrIpadInLostMode200ResponseGeneral := _IphoneOrIpadInLostMode200ResponseGeneral{}

	err = json.Unmarshal(data, &varIphoneOrIpadInLostMode200ResponseGeneral)

	if err != nil {
		return err
	}

	*o = IphoneOrIpadInLostMode200ResponseGeneral(varIphoneOrIpadInLostMode200ResponseGeneral)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "device_id")
		delete(additionalProperties, "device_name")
		delete(additionalProperties, "last_enrollment")
		delete(additionalProperties, "first_enrollment")
		delete(additionalProperties, "model")
		delete(additionalProperties, "platform")
		delete(additionalProperties, "os_version")
		delete(additionalProperties, "supplemental_build_version")
		delete(additionalProperties, "supplemental_os_version_extra")
		delete(additionalProperties, "system_version")
		delete(additionalProperties, "boot_volume")
		delete(additionalProperties, "time_since_boot")
		delete(additionalProperties, "last_user")
		delete(additionalProperties, "asset_tag")
		delete(additionalProperties, "assigned_user")
		delete(additionalProperties, "blueprint_name")
		delete(additionalProperties, "blueprint_uuid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIphoneOrIpadInLostMode200ResponseGeneral struct {
	value *IphoneOrIpadInLostMode200ResponseGeneral
	isSet bool
}

func (v NullableIphoneOrIpadInLostMode200ResponseGeneral) Get() *IphoneOrIpadInLostMode200ResponseGeneral {
	return v.value
}

func (v *NullableIphoneOrIpadInLostMode200ResponseGeneral) Set(val *IphoneOrIpadInLostMode200ResponseGeneral) {
	v.value = val
	v.isSet = true
}

func (v NullableIphoneOrIpadInLostMode200ResponseGeneral) IsSet() bool {
	return v.isSet
}

func (v *NullableIphoneOrIpadInLostMode200ResponseGeneral) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIphoneOrIpadInLostMode200ResponseGeneral(val *IphoneOrIpadInLostMode200ResponseGeneral) *NullableIphoneOrIpadInLostMode200ResponseGeneral {
	return &NullableIphoneOrIpadInLostMode200ResponseGeneral{value: val, isSet: true}
}

func (v NullableIphoneOrIpadInLostMode200ResponseGeneral) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIphoneOrIpadInLostMode200ResponseGeneral) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


